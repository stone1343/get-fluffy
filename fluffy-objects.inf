
! Clothes that Kaitlyn's wearing
Top yellow_shirt "yellow t-shirt" kaitlyn
 with
  name 'yellow' 'shirt' 'top' 't-shirt',
  description "It's my favourite yellow shirt.",
  invent "my yellow shirt",
  article "my",
  owner kaitlyn
 has worn;

Pants skinny_jeans "skinny jeans" kaitlyn
 with
  name 'skinny' 'jeans' 'pants',
  description "They're skinny jeans.",
  article "my",
 has worn pluralname;

! Clothes that Britney's wearing
Top blue_shirt "blue t-shirt" britney
 with
  name 'blue' 'shirt' 'top' 't-shirt',
  description "It's a blue shirt.",
  invent "Britney's blue shirt",
  article "Britney's",
  owner britney
 has worn;

Pants yoga_pants "yoga pants" britney
 with
  name 'yoga' 'pants',
  description "They're Britney's yoga pants.",
  article "Britney's",
 has worn pluralname;

! Clothes that are initially hidden
Lingerie k_bra "bra"
 with
  name 'my' 'bra',
  description "I love how my boobs look in this bra.",
  article "my",
 has ~worn;

Lingerie b_bra "bra"
 with
  name 'Britney^s' 'bra',
  description "It's a really sexy bra.",
  article "Britney's",
 has ~worn;

! Clothes in hotel rooms
Top pink_shirt "pink shirt" room_402
 with
  name 'pink' 'shirt' 'top' 't-shirt',
  description "It's that pink shirt I love so much.",
  article "my",
  owner kaitlyn
 has ~worn;

Top green_shirt "green t-shirt" room_403
 with
  name 'green' 'shirt' 'top' 't-shirt',
  description "It Brit's green shirt.",
  article "Britney's"
  owner britney
 has ~worn;

! Room keys
Room_Key k_key "room key" kaitlyn
 class Britney_Object Ownable_Object
 with
  name 'room' 'key',
  article "my",
  owner kaitlyn,
  key_to_room room_402
 has proper;

Room_Key b_key "room key" britney
 with
  name 'Britney^s' 'room' 'key',
  article "Britney's",
  owner britney,
  key_to_room room_403
 has proper;

! Not a Room_Key because I shouldn't be able to give it to Britney
Disappearing_Object master_key "master key" igor
 class Ownable_Object
 with
  name 'master' 'key',
  description "It has the hotel's logo, but no room number.",
  article "Igor's",
  owner igor;

! Might expect 'has talkable' for a phone, but this phone is basically a teleporter ;-)
Disappearing_Object smartphone "smartphone" kaitlyn
 class Ownable_Object
 with
  name 'smartphone' 'cell' 'cellular' 'mobile' 'screen' 'display',
  initial "~Hey, there's my smartphone!~",
  description [;
   if (FlagOn(SMARTPHONE_LED_BLINKING) && FlagOff(EXAMINE_SCREEN_NOT_SMARTPHONE)) {
    SetFlag(EXAMINE_SCREEN_NOT_SMARTPHONE);
    print "I love my smartphone, it's got a full HD screen and, below the screen, is the Home button.";
    if (FlagOn(SMARTPHONE_LED_BLINKING)) print "^^Hey, the notification light is blinking!";
    new_line;
    rtrue;
   }
   else <<Examine screen>>;
  ],
  invent "my smartphone", ! So inventory doesn't list the screen, buttons, icons, etc
  article "my",
  owner kaitlyn,
  mode MODE_OFF,
  before [;
   Push, Touch:
    "You'll have to be more specific.";
   Drop:
    ! If telephone hasnt general, smartphone is being used
    if ((OnPhone()) && (telephone hasnt general)) "Don't be rude, you need to hang up first.";
  ],
  change_mode [new_mode o;
   self.mode = new_mode;
   if (self.mode ~= MODE_OFF) self.interact();
   if (self.mode == MODE_HOME) objectloop (o ofclass Icon) move o to screen;
   else objectloop (o ofclass Icon) remove o;
   if (self.mode == MODE_MESSAGES) ClearFlag(SMARTPHONE_LED_BLINKING);
   if (self.mode == MODE_CONTACTS) move contact_britney to screen;
   else remove contact_britney;
   if (self.mode == MODE_PHOTOS) {
    current_photo = MAX_PHOTOGRAPHS - Photograph.remaining();
   }
  ],
  interact [;
   if (FlagOff(EXAMINE_SCREEN_NOT_SMARTPHONE)) SetFlag(EXAMINE_SCREEN_NOT_SMARTPHONE);
   ! When you're on the phone with Britney, the daemon doesn't run, you can talk as long as you want
   if (call_person ~= britney) {
    self.move_counter = SMARTPHONE_TIMEOUT;
    StartDaemon(self);
   }
  ],
  move_counter 0,
  ! If you're on the phone, the daemon should be stopped
  daemon [;
   self.move_counter--;
   if (self.move_counter == 0) {
    self.change_mode(MODE_OFF);
    StopDaemon(self);
    ! This should be unobtrusive, it's not like the doors swinging shut
    !print "^My smartphone times out and turns off.^";
   }
  ]
 has container transparent;

Object screen "screen" smartphone
 with
  description [ o;
   ! The various modes use 'print' so that they fall through to the blinking notification light
   switch (smartphone.mode) {
    MODE_OFF: print "It's off.";
    MODE_HOME: print "The screen's got four icons, Messages, Contacts, Camera and Photos.";
    ! Contacts is only for outgoing calls to Britney
    MODE_CONTACTS:
     if (call_person == britney && telephone hasnt general) print "It has a picture of Britney and a Hang Up button.";
     else print "Contacts:^ Britney^^(I need to get more friends!)";
    ! Text mode is only to receive the ransom message from anonymous
    MODE_MESSAGES:
     SetFlag(PLAYER_HAS_SEEN_TEXT);
     if (end_time == nothing) {
      ! End time is 60 minutes from when you see the text message
      ! Using factor of 60 gives minutes since 1970-01-01, 0x7FFF FFFF will overflow a 32-bit signed integer when Unix time = 0x1D FFFF FFC4 = 6053-01-23
      ! Or another way, 0x7FFF FFFF / 3C = 222 2222, an awfully long time until this overflows
      end_time = glk_current_simple_time(60) + MAX_TIME;
     }
     print_ret (preformatted)"Anonymous: We have your dog. If you want it back, send us a topless picture of yourself. You have one hour.";
    MODE_CAMERA: print "Camera's ready to take a photo.";
    MODE_PHOTOS:
     objectloop (o ofclass Photograph) if (o.number == current_photo) <Examine o>;
   }
   if (FlagOn(SMARTPHONE_LED_BLINKING)) print "^^The notification light is blinking.";
   new_line;
   rtrue;
  ],
  before [;
   Push, Touch: "You'll have to be more specific.";
  ]
 has container transparent static;

Object home_button "Home button" smartphone
 with
  name 'Home',
  description "It's round, black and slightly recessed.",
  before [;
   Push, Touch:
    if (smartphone notin player) move smartphone to player;
    switch (smartphone.mode) {
     MODE_OFF: print "I pressed the Home button.^";
     MODE_HOME: print "Nothing happens.^";
     default: print "Back to Home screen.^";
    }
    smartphone.change_mode(MODE_HOME);
    rtrue;
  ]
 has static;

! The icons have to be moved to the screen when in MODE_HOME, otherwise removed so you can't interact with them
Icon messages_icon "Messages icon"
 with
  name 'messages',
  mode MODE_MESSAGES,
  label "Messages";

Icon contacts_icon "Contacts icon"
 with
  name 'contacts',
  mode MODE_CONTACTS,
  label "Contacts";

Icon camera_icon "Camera icon"
 with
  name 'camera',
  mode MODE_CAMERA,
  label "Camera";

Icon photos_icon "Photos icon"
 with
  name 'photos',
  mode MODE_PHOTOS,
  label "Photos";

Object contact_britney
 with
  name 'Britney',
  before [;
   Push, Touch:
    if (OnPhone()) "I'm currently on the phone with ", (name)call_person, ".";
    if ((smartphone notin actor) || (smartphone.mode ~= MODE_CONTACTS)) "With what?";
    if (player in parent(britney)) print_ret "She's standing right in front of me!";
    ! You can stay on the phone with Brit as long as you want
    StopDaemon(smartphone);
    call_room = parent(britney);
    call_person = britney;
    give britney concealed;
    move britney to location;
    move b_boobs to location;
    remove self;
    print_ret (BritneysVoice)"Hey Kaitlyn, what's up?";
  ];

! Other objects in various rooms

Object slot_machine "slot machine" casino
 with
  name 'slot' 'machine',
  description [ n o;
   print "It has a lot of flashing lights";
   n = 0;
   objectloop (o ofclass Token) {
    if (o in self) n++;
   }
   if (n > 0) {
    if (n == 1) print " and a token";
    else print " and ", n, " tokens";
    print " in the tray";
   }
   ".";
  ],
  before [;
   Receive:
    if (noun ofclass Token) {
     ScoreFlag(PLAYER_PLAYED_TOKEN);
     remove noun;
     print "There's even more flashing lights and beeping sounds for a few seconds, then ";
     ! 50% win rate is mentioned in Igor's intro
     if (random(2) == 1) {
      move noun to self;
      "a ~clunk~ sound. ", (blue)"Oooh, I think I won!!! ", (char)smiley;
     }
     remove noun;
     "nothing. Well, that wasn't much fun!";
    }
    "You're not really clear on how a slot machine works, are you?";
  ]
 has scenery container open;

Object laptop "laptop" room_202
 with
  name 'laptop' 'computer',
  initial [;
   if (FlagOff(PLAYER_HAS_SEEN_LAPTOP)) "There's a laptop here and it's on!";
   rtrue;
  ],
  description [;
   if (FlagOff(PLAYER_HAS_SEEN_LAPTOP)) {
    SetFlag(PLAYER_HAS_SEEN_LAPTOP);
    print "There's an email on the laptop that I can't understand! It reads:^";
    glk_set_style(style_Preformatted);
    print (char)ucVe, (char)lcEl, (char)lcA, (char)lcDe, ", ";
    print (char)lcShch, (char)lcYe, (char)lcEn, (char)lcO, (char)lcKa, " ";
    print (char)lcVe, " ";
    print (char)lcPe, (char)lcO, (char)lcDe, (char)lcVe, (char)lcA, (char)lcEl, (char)lcYe, ".^";
    print (char)ucEs, (char)lcYe, (char)lcEr, (char)lcGe, (char)lcYe, (char)lcY, "^";
    glk_set_style(style_Normal);
    rtrue;
   }
   "There's an incomprehensible email on the laptop.";
  ],
  before [;
   Take:
    "Better leave it where it is.";
  ],
  article "Vlad's";

Token copper_token "copper token" room_207
 with
  name 'copper' 'token',
  foundFlag PLAYER_FOUND_COPPER_TOKEN;

Token silver_token "silver token" room_306
 with
  name 'silver' 'token',
  foundFlag PLAYER_FOUND_SILVER_TOKEN;

Token platinum_token "platinum token" room_407
 with
  name 'platinum' 'token',
  foundFlag PLAYER_FOUND_PLATINUM_TOKEN;

Token bronze_token "bronze token" room_504
 with
  name 'bronze' 'token',
  foundFlag PLAYER_FOUND_BRONZE_TOKEN;

Token gold_token "gold token" roof
 with
  name 'gold' 'token',
  foundFlag PLAYER_FOUND_GOLD_TOKEN;

! Might expect 'has talkable' for a phone, but this phone is basically a teleporter ;-)
! Telephone's general means call active
Object telephone "house phone"
 with
  name 'telephone' 'house' 'phone' 'receiver',
  description "It's an old-style phone, with a numeric keypad and a cord.",
  found_in lobby room_201 room_202 room_203 room_204 room_205 room_206 room_207 room_301 room_302 room_303 room_304 room_305 room_306 room_307 room_401 room_402 room_403 room_404 room_405 room_406 room_407 room_501 room_502 room_503 room_504 room_505 room_506 room_507,
  before [;
   ! If telephone has general, it's the one being used
   Drop:
    if ((OnPhone()) && (self has general)) "Don't be rude, you need to hang up first.";
    move self to location;
    "I put the receiver back on the hook.";
   Take:
    move self to player;
    "I pick up the receiver and hear a dial tone.";
  ];

Object hand_sanitizer "hand sanitizer" lobby
 with
  name 'hand' 'sanitizer',
  description "Thank god there's hand sanitizer here!",
  before [;
   Take:
    if (FlagOn(PLAYER_USED_HAND_SANITIZER)) "No use wasting it all, I'm good already.";
    SetFlag(PLAYER_USED_HAND_SANITIZER);
    score++;
    "I take some hand sanitizer and rub it into my hands. No Covid for me!";
  ]
 ! proper so it doesn't say "a hand sanitizer"
 has proper;

! Just so Fluffy's in the dictionary
Object fluffy "Fluffy";
