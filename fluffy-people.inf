
Girl kaitlyn "Kaitlyn" street
 with
  name 'Kaitlyn',
  narrative_voice 1,
  wearing_top yellow_shirt,
  bra k_bra,
  is "I'm",
  description [;
   if (self.wearing_top ~= nothing) print "I'm rockin' a cute, little ", (name)self.wearing_top;
   else print "I'm in a bra";
   " and skinny jeans.";
  ],
  before [;
   Give:
    if (OnPhone(self)) "(Kaitlyn Before Give) It'd be hard to give something to ", (name)self, " when I'm on the phone with ", (PronounAcc)self, "!";
  ],
  orders [ n o;
   Inv:
    print "I'm carrying ";
    objectloop (o in player) {
        if (o hasnt worn) {
         give o workflag;
         n++;
        }
        else give o ~workflag;
    }
    if (n == 0) print "nothing";
    else WriteListFrom(child(player), FULLINV_BIT+ENGLISH_BIT+RECURSE_BIT+WORKFLAG_BIT);
    ".";
  ],
  after [;
   Give:
    if (OnPhone(self)) "(Kaitlyn After Give) It'd be hard to give something to ", (name)self, " when I'm on the phone with ", (PronounAcc)self, "!";
  ],
 has concealed proper transparent;

! Obviously Kaitlyn's boobs should go everywhere she does
Object k_boobs "my boobs"  street
 with
  name 'my' 'boobs' 'breasts',
  description "I have nice boobs!",
  article "my",
  before [;
   Touch, Kiss:
    print_ret (preformatted)"This is not that kind of game.";
  ],
 has scenery static pluralname proper animate; ! Animate so you can try to kiss them!

Girl britney "Britney" room_403
 with
  name 'Britney' 'Brit',
  wearing_top blue_shirt,
  bra b_bra,
  is "Britney's",
  ! destination_room is for ComeHere
  destination_room nothing,
  ! destination_floor is just for helping figure out where to move, the one that matters is destination_room
  destination_floor nothing,
  is_following false,
  initial [;
   ! Kaitlyn walks into the room where Britney is while she's on her way somewhere
   ! Brit stops going wherever she was going, with no feedback
   if (self.destination_room ~= nothing) {
    self.destination_room = nothing;
    StopDaemon(self);
   }
   if (OnPhone(self)) {
    EndCall(self);
    "Britney's here so I hang up the phone.";
   }
   ! ToDo: This is the single most annoying defect, I can't figure out how not to print an extra blank line while she's following, so for now print an annoying message
   if (self.is_following) "Britney follows me.";
   print_ret (string)random("Britney's here!", "There's Britney!", "Hey, girlfriend!", "My BFF's here!");
  ],
  description [ n o i;
   if (OnPhone(self)) "Britney has a nice voice on the phone.";
   n = 0;
   objectloop (o ofclass Britney_Object) {
    if ((o in self) && (o hasnt worn)) n++;
   }
   if (n > 0) {
    i = 0;
    objectloop (o ofclass Britney_Object) {
     if ((o in self) && (o hasnt worn)) {
      switch (++i) {
       1: print "Britney's carrying ";
       default: if (i < n) print ", ";
       else print " and ";
      };
      if (o ofclass Ownable_Object) {
       if (o.owner == player) print "my";
       else print "her";
      }
      else print (string)noun.article;
      print " ", (name)o;
     }
    }
   } else print "Britney's a brunette, she's slim and athletic like me";
   print ", and she's wearing a ";
   if (self.wearing_top ~= nothing) print (name)self.wearing_top;
   else print "bra";
   " and yoga pants.";
  ],
  ActualRoom [;
    if (OnPhone(self)) return call_room;
    else return parent(self);
  ],
  before [;
   Give, Show:
    if (OnPhone(self)) "It's hard to do that when I'm on the phone with her!";
   Push, Touch:
    if (~~OnPhone(self) && parent(contact_britney) == screen) <Push contact_britney>;
  ],
  life [ o;
   Give:
    ! Giving to Britney...
    if (noun ofclass Britney_Object) {
     move noun to self;
     print_ret (BritneysVoice)"Thanks!";
    }
    print_ret (BritneysVoice)"No, thanks.";
   Show:
    ! Showing to Britney...
    ! if (call_person == self) "It's hard to show something to ", (name)self, " when I'm on the phone with ", (PronounAcc)self, "!";
    if (noun == smartphone) {
     if (smartphone.mode == MODE_PHOTOS) {
      ! Find current photo
      objectloop (o ofclass Photograph) {
       if (o.number == current_photo) {
        switch (o.subject) {
         fluffy: print_ret (BritneysVoice)"Omigod, I love Fluffy, he's soo cute!";
         igor: print_ret (BritneysVoice)"Isn't that the guy from the front desk?";
         britney:
          print (BritneysVoice)"Oh, that's a good photo of me";
          if (o.wearing_top == nothing) print_ret (BritneysVoice)", but make sure you don't show that to anyone else!";
          print_ret (BritneysVoice)".";
         kaitlyn:
          print_ret (BritneysVoice)"That's an awesome photo of you!";
         laptop:
          if (FlagOff(PLAYER_KNOWS_WHERE_FLUFFY_IS)) print_ret (BritneysVoice)"Hey, Igor's Ukrainian, maybe he'd know what that means.";
          print_ret (BritneysVoice)"We need to go there and find Fluffy!";
        }
        break;
       }
      }
     }
     if (smartphone.mode == MODE_MESSAGES) {
      if (FlagOff(BRITNEY_KNOWS_ABOUT_FLUFFY)) {
       SetFlag(BRITNEY_KNOWS_ABOUT_FLUFFY);
       print_ret (BritneysVoice)"Omigod, someone took Fluffy? What are we gonna do to get him back?";
      }
      print_ret (BritneysVoice)"I don't what else I can tell you to help.";
    }
    print_ret (BritneysVoice)"Yes, I've seen your phone before.";
   }
   Tell:
    if (second == 'fluffy') {
     if (FlagOn(PLAYER_HAS_SEEN_TEXT)) {
      if (FlagOff(BRITNEY_KNOWS_ABOUT_FLUFFY)) {
       SetFlag(BRITNEY_KNOWS_ABOUT_FLUFFY);
       print_ret (BritneysVoice)"Omigod, that's awful, Katey!!!";
      }
      print_ret (BritneysVoice)"Let me know if there's anything I can do to help!";
     }
     print_ret (BritneysVoice)"OMG, Kaitlyn, I know you love your dog!";
    }
    "She doesn't seem interested.";
   Ask:
    if (second == 'fluffy') {
     if (FlagOff(BRITNEY_KNOWS_ABOUT_FLUFFY)) print_ret (BritneysVoice)"I love that little dog, Katey!";
     else print_ret (BritneysVoice)"I don't know what to suggest.";
    }
    "Britney didn't know anything about that.";
   Kiss:
    print_ret (BritneysVoice)"I love you, Kaitlyn, but not that way.";
  ],
  orders [;
   ! This is player telling Britney to do something
   Give:
    if (OnPhone(self)) print_ret (BritneysVoice)"Remind me when I see you again.";
    if (noun notin self) print_ret (BritneysVoice)"But, Kaitlyn, I don't have that.";
    move noun to player;
    print_ret (BritneysVoice)"Sure, here you go.";
   Drop:
    if (noun notin self) print_ret (BritneysVoice)"I don't have that, Kaitlyn.";
    move noun to self.ActualRoom();
    print_ret (BritneysVoice)"Ok.";
   Take:
    if (noun in self) print_ret (BritneysVoice)"Kaitlyn, I already have that.";
    if ((noun ofclass Clothes) && (noun in self.ActualRoom())) {
     move noun to self;
     print_ret (BritneysVoice)"Ok.";
    }
   Look:
    if (self.ActualRoom() == location) print_ret (BritneysVoice)"I see the same stuff as you, girlfriend!";
    glk_set_style(style_BlockQuote);
    print "I'm in ", (name)britney.ActualRoom(), " and there's not much happening.^";
    glk_set_style(style_Normal);
    rtrue;
   Disrobe:
    if (~~(self.ActualRoom() ofclass Hotel_Room)) print_ret (BritneysVoice)"I can't undress in public!";
    ! Britney won't take off her top unless she knows about the demand for a topless photo
    if (FlagOff(BRITNEY_KNOWS_ABOUT_FLUFFY)) print_ret (BritneysVoice)"Why would I do that?";
    if (noun ofclass Top) {
     DisrobeTop(actor, noun);
     rtrue;
    }
    print_ret (BritneysVoice)"Sorry, but no!";
   Wear:
    if (noun ofclass Top) {
     WearTop(actor, noun);
     rtrue;
    }
    print_ret (BritneysVoice)"Huh?";
   ! Only works when you're on the phone with her
   ComeHere:
    if (~~(OnPhone(self))) print_ret (BritneysVoice)"Uhh, Kaitlyn, I am here!";
    if (self.wearing_top == nothing) print_ret (BritneysVoice)"I'm not walking out of here without a shirt!";
    if (player in basement or roof) print_ret (BritneysVoice)"That's for hotel staff only.";
    if (player in elevator) print_ret (BritneysVoice)"Let's meet somewhere other than the elevator.";
    if (location ofclass Hall or Hotel_Room) self.destination_floor = location.floor_number;
    else self.destination_floor = 1;
    if (location ofclass Hotel_Room) self.destination_room = location.to_hall;
    else self.destination_room = location;
    StartDaemon(self);
    EndCall(self);
    if (location ofclass Hotel_Room) print_ret (BritneysVoice)"Ok, I'll wait for you in the hall, bye.";
    else print_ret (BritneysVoice)"Ok, see you soon, bye.";
   ! These next 2 only make sense when you're in the same room
   FollowMe:
    if (self.ActualRoom() ~= location) print_ret (BritneysVoice)"Do you mean for me to come to you?";
    if (self.is_following) "Yeah, you already said that.";
    self.is_following = true;
    print_ret (BritneysVoice)"Sure, I'll come with you.";
   StayHere:
    if (self.ActualRoom() ~= location) print_ret (BritneysVoice)"Do you mean for me to stay where I am?";
    if (~~(self.is_following)) print_ret (BritneysVoice)"That was my plan.";
    self.is_following = false;
    print_ret (BritneysVoice)"Ok, I'll stay here.";
   NotUnderstood: print_ret (BritneysVoice)"I don't understand.";
  ],
  daemon [ to_room;
   ! to_room is the room she'll move to this turn
   to_room = nothing;
   switch (parent(self)) {
    room_501, room_502, room_503, room_504, room_505, room_506, room_507:
     to_room = fifth_floor;
    fifth_floor:
     if (self.destination_floor < 5) to_room = fourth_floor;
     else to_room = self.destination_room;
    room_401, room_402, room_403, room_404, room_405, room_406, room_407:
     to_room = fourth_floor;
    fourth_floor:
     if (self.destination_floor < 4) to_room = third_floor;
     else {
      if (self.destination_floor > 4) to_room = fifth_floor;
      else to_room = self.destination_room;
     }
    room_301, room_302, room_303, room_304, room_305, room_306, room_307:
     to_room = third_floor;
    third_floor:
     if (self.destination_floor < 3) to_room = second_floor;
     else {
      if (self.destination_floor > 3) to_room = fourth_floor;
      else to_room = self.destination_room;
     }
    room_201, room_202, room_203, room_204, room_205, room_206, room_207:
     to_room = second_floor;
    second_floor:
     if (self.destination_floor < 2) to_room = elevator_vestibule;
     else {
      if (self.destination_floor > 2) to_room = third_floor;
      else to_room = self.destination_room;
     }
    elevator_vestibule:
     if (self.destination_floor > 1) to_room = second_floor;
     else {
      if (self.destination_room == street) to_room = lobby;
      else to_room = self.destination_room;
     }
    lobby:
     if (self.destination_room == street or gift_shop) to_room = self.destination_room;
     else to_room = elevator_vestibule;
    gift_shop:
     if (self.destination_room == lobby or casino) to_room = self.destination_room;
     else to_room = elevator_vestibule;
    casino:
     if (self.destination_room == gift_shop or restaurant) to_room = self.destination_room;
     else to_room = elevator_vestibule;
    restaurant:
     if (self.destination_room == casino or nightclub) to_room = self.destination_room;
     else to_room = elevator_vestibule;
    nightclub:
     if (self.destination_room == restaurant) to_room = self.destination_room;
     else to_room = elevator_vestibule;
    street: to_room = lobby;
   }
   if (to_room ~= nothing) {
    ! Britney's moving to a new room
    move self to to_room;
    move b_boobs to to_room;
    ! Britney arrived where Kaitlyn is
    if (player in to_room) {
     self.destination_room = nothing;
     StopDaemon(self);
     "^Just then, Britney arrived.";
    }
    ! She arrived at her destination, stop without any feedback to player
    if (parent(self) == self.destination_room) {
     self.destination_room = nothing;
     StopDaemon(self);
    }
   }
  ]
 has transparent; ! Transparent so you can see her clothes

! Obviously Britney's boobs should go everywhere she does
Object b_boobs "Britney's boobs"  room_403
 with
  name 'Britney^s' 'boobs' 'Brit^s' 'breasts',
  description "They're smaller than mine, but still nice.",
  article "Britney's",
  before [;
   Touch, Kiss:
    print_ret (preformatted)"Focus on the game!";
  ],
 has scenery static pluralname proper animate; ! Animate so you can try to kiss them!

Guy igor "Igor" lobby
 with
  name 'Igor',
  description [;
   if (OnPhone(self)) "Over the phone, his accent seems even stronger.";
   "Igor's wearing a hotel uniform.";
  ],
  before [;
   Give:
    if (OnPhone(self)) "It'd be hard to give ", (name)self, " something when I'm on the phone with ", (PronounAcc)self, "!";
   Show:
    if (OnPhone(self)) "It's hard to show something to ", (name)self, " when I'm on the phone with ", (PronounAcc)self, "!";
  ],
  life [ o;
   Give:
    ! Giving to Igor...
    if (noun == master_key) {
     move noun to igor;
     print_ret (IgorsVoice)"Thanks for getting that back to me!";
    }
    print_ret (IgorsVoice)"No thanks, you keep that.";
   Show:
    ! Showing to Igor...
    if (noun == smartphone) {
     if (smartphone.mode == MODE_MESSAGES) {
      if (FlagOff(IGOR_KNOWS_ABOUT_FLUFFY)) {
       SetFlag(IGOR_KNOWS_ABOUT_FLUFFY);
       print_ret (IgorsVoice)"I'm so sorry someone took your dog! If there's anything I can do to help, let me know, I'm always here.";
      }
      print_ret (IgorsVoice)"I don't know what else I can tell you to help.";
     }
     if (smartphone.mode == MODE_PHOTOS) {
      ! Find current photo
      objectloop (o ofclass Photograph) {
       if (o.number == current_photo) {
        switch (o.subject) {
         fluffy: print_ret (IgorsVoice)"Oh, that's your dog, he's really cute!";
         igor: print_ret (IgorsVoice)"Hey, that's me!";
         britney:
          if (o.wearing_top == nothing) print_ret (Preformatted)"Don't be showing topless photos to Igor.";
          print_ret (IgorsVoice)"Yes, that's your friend, how could I forget her?";
         kaitlyn:
          if (o.wearing_top == nothing) print_ret (Preformatted)"Don't be showing topless photos to Igor.";
          else print_ret (IgorsVoice)"That's an awesome photo of you.";
         laptop:
          if (FlagOff(PLAYER_KNOWS_WHERE_FLUFFY_IS)) {
           SetFlag(PLAYER_KNOWS_WHERE_FLUFFY_IS);
           print_ret (IgorsVoice)"Oh, that's Russian, it says, ~Vlad, the dog's in the basement.~";
          }
          print_ret (IgorsVoice)"Yes, I told you what that means.";
         default: print_ret (IgorsVoice)"That's a nice photo.";
        }
       }
      }
     }
     print_ret (IgorsVoice)"That's a nice phone, is it the newest model?";
    }
    if (noun == laptop) {
     if (FlagOn(PLAYER_KNOWS_WHERE_FLUFFY_IS)) print_ret (IgorsVoice)"Like I said, your dog must be in the basement.";
     SetFlag(PLAYER_KNOWS_WHERE_FLUFFY_IS);
     print_ret (IgorsVoice)"Yeah, that's Russian, it means, ~Vlad, the dog's in the basement.~";
    }
    print_ret (IgorsVoice)"I'm afraid I can't tell you much about that.";
   Ask:
    if (second == 'britney' or 'brit') print_ret (IgorsVoice)"Not sure, Miss, did you try her room?";
    if (second == 'fluffy') {
     if (FlagOff(IGOR_KNOWS_ABOUT_FLUFFY)) print_ret (IgorsVoice)"Your dog is very cute, good luck in the dog show!";
     print_ret (IgorsVoice)"Sorry, I don't know anything else about your dog.";
    }
    if (second == 'master' or 'key') print_ret (IgorsVoice)"Of course, I have a master key that can get me anywhere in the hotel.";
    if (second == 'vlad') {
     if (FlagOff(IGOR_KNOWS_ABOUT_FLUFFY)) print_ret (IgorsVoice)"Just between you and me, I hate Russians after what they did to my country.";
     if (FlagOff(PLAYER_KNOWS_ABOUT_202)) {
      SetFlag(PLAYER_KNOWS_ABOUT_202);
      print_ret (IgorsVoice)"I shouldn't tell you this, but there's two big Russian guys named Vladimir Putkin and Sergei something in room 202.";
     }
     print_ret (IgorsVoice)"There's nothing else I can tell you about the Russians.";
    }
    print_ret (IgorsVoice)"I don't know anything about that.";
   Tell:
    if (second == 'fluffy') {
     if (FlagOn(PLAYER_HAS_SEEN_TEXT)) {
      if (FlagOff(IGOR_KNOWS_ABOUT_FLUFFY)) {
       SetFlag(IGOR_KNOWS_ABOUT_FLUFFY);
       print_ret (IgorsVoice)"Oh no, someone took your dog? If there's anything I can do to help, let me know.";
      }
      print_ret (IgorsVoice)"So no more news, then?";
     }
     print_ret (IgorsVoice)"Well, good luck with the dog show!";
    }
    if (second == 'flashback' or 'vlad') {
     if (FlagOn(PLAYER_HAD_FLASHBACK) && FlagOn(IGOR_KNOWS_ABOUT_FLUFFY)) {
      if (FlagOff(PLAYER_KNOWS_ABOUT_202)) {
       SetFlag(PLAYER_KNOWS_ABOUT_202);
       print_ret (IgorsVoice)"Yeah, there's a couple Russian guys that checked in yesterday, they're in room 202.";
      }
      print_ret (IgorsVoice)"That's all I know about that, Miss.";
     }
    }
    if (second == 'message' or 'email') {
     if (FlagOn(PLAYER_HAS_SEEN_LAPTOP)) {
      if (FlagOff(PLAYER_KNOWS_WHERE_FLUFFY_IS)) {
       ! You can't adequately describe the message unless you're looking at the computer
       if (location == room_202) {
        SetFlag(PLAYER_KNOWS_WHERE_FLUFFY_IS);
        "It takes a while to describe it to Igor, but eventually he figures out that it means Fluffy's in the basement.";
       }
       print_ret (IgorsVoice)"That sounds like it's in Russian.";
      }
      print_ret (IgorsVoice)"Let's not stand around talking all day!";
     }
     ! (name) - no, nothing - no, (string) - no
     ! Can't figure this out, so brute force
     if (second == 'message') print_ret (IgorsVoice)"What message?";
     else  print_ret (IgorsVoice)"What email?";
    }
    print_ret (IgorsVoice)"That's interesting, Miss.";
   Kiss:
    print_ret (Preformatted)"You don't know Igor nearly well enough to kiss him.";
  ],
  orders [;
   ComeHere:
    if (OnPhone(igor)) print_ret (IgorsVoice)"I need to stay here, sorry.";
   FollowMe:
    if (~~(OnPhone(igor))) print_ret (IgorsVoice)"I need to stay here, sorry.";
   StayHere:
    print_ret (IgorsVoice)"Of course, I have to stay here.";
   Give:
    !if (call_person == self) "It'd be hard for ", (name)self, " to give you anything when I'm on the phone with ", (PronounAcc)self, "!";
    if ((noun == master_key) && (noun in self) && (second == player)) {
     if (FlagOff(PLAYER_KNOWS_ABOUT_202)) print_ret (IgorsVoice) "Sorry, no way I can do that.";
     move noun to second;
     print_ret (IgorsVoice)"I could get in big trouble for this, so make sure you get it back to me!";
    }
   Take:
    if (noun == master_key) {
     move noun to igor;
     print_ret (IgorsVoice)"I sure am glad to get that back!";
    }
    print_ret (IgorsVoice)"No, thanks, you keep that.";
   NotUnderstood: print_ret (IgorsVoice)"I don't understand.";
  ]
 has scenery;

! SMS thread with Vladimir Putkin
Guy anonymous "Anonymous"
 with
  name 'anonymous';

! Just so you can try sending photos to Vlad, but he's not in your address book
Guy vlad "Vlad"
 with
  name 'Vlad' 'Vladimir' 'Putkin';
